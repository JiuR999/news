<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.swust.article.mapper.ApArticleMapper">
    <resultMap id="resultMap" type="com.swust.model.article.pojos.ApArticle">
        <id column="id" property="id"/>
        <result column="title" property="title"/>
        <result column="author_id" property="authorId"/>
        <result column="author_name" property="authorName"/>
        <result column="channel_id" property="channelId"/>
        <result column="channel_name" property="channelName"/>
        <result column="layout" property="layout"/>
        <result column="flag" property="flag"/>
        <result column="images" property="images"/>
        <result column="labels" property="labels"/>
        <result column="likes" property="likes"/>
        <result column="collection" property="collection"/>
        <result column="comment" property="comment"/>
        <result column="views" property="views"/>
        <result column="province_id" property="provinceId"/>
        <result column="city_id" property="cityId"/>
        <result column="county_id" property="countyId"/>
        <result column="created_time" property="createdTime"/>
        <result column="publish_time" property="publishTime"/>
        <result column="sync_status" property="syncStatus"/>
        <result column="static_url" property="staticUrl"/>
    </resultMap>

    <sql id="baseColumn" >
        id,
	    title,
	    author_id,
	    author_name,
	    channel_id,
	    channel_name,
	    images,
        labels,
	    likes,
	    collection,
	    downloads,
	    views,
	    created_time,
	    publish_time,
	    update_time
    </sql>

    <resultMap id="depMap" type="com.swust.model.article.pojos.EmpVO">
        <id column="tid" property="id"/>
        <result column="tname" property="name"/>
        <collection property="emps" ofType="com.swust.model.article.pojos.TestEmp">
            <id column="sid" property="id"/>
            <result column="sname" property="name"/>
        </collection>
    </resultMap>

    <update id="updateBatchData">
        <!--<foreach collection="dtos" item="dto" separator=";">-->
            <bind name="dynamicColumn" value="'`'+column+'`'"/>
            update ap_article
            set ${dynamicColumn} = coalesce(${dynamicColumn}, 0) + #{value}
            where id = #{id}
        <!--</foreach>-->
    </update>

    <update id="updateViews">
        <bind name="dynamicColumn" value="'`' + column + '`'"/>
        update ap_article
        set ${dynamicColumn} = ${value}
        where id = #{id}
    </update>

    <select id="loadArticleList" resultMap="resultMap">
        SELECT aa.*
        FROM `ap_article` aa,
        ap_article_config aac
        <where>
            and aac.is_down != 1
            and aac.is_delete != 1
            /*加载更多*/
            <if test="type != null and type == 1">
                and aa.publish_time &lt; #{dto.maxBehotTime}
            </if>

            <if test="type != null and type == 2">
                and aa.publish_time &gt; #{dto.maxBehotTime}
            </if>
        </where>
        order by aa.publish_time desc
        limit #{dto.size}
    </select>

    <select id="getDep" resultMap="depMap">
            select d.id tid,d.name tname,e.id sid,e.name sname
            from dep d
            inner join emp e on d.id = e.dep_id
    </select>

    <select id="pageByContent" resultType="com.swust.model.article.vos.ApArticleVO">
        select
        CASE
        WHEN ac.id is NOT NULL THEN
        1
        ELSE
        0
        END AS is_collection,
        a.*
        from (
        select
        a1.*,
        aac.article_id,
        aac.content
        from ap_article a1
        inner join ap_article_content aac on a1.id = aac.article_id
        <if test="dto.tag != null and dto.tag != ''">
            and a1.channel_id = #{dto.tag}
        </if>
        <where>
            <if test="dto.keyWord != null and dto.keyWord != ''">
                match(aac.content) against(#{dto.keyWord} in boolean mode)
                or a1.title like concat('%',#{dto.keyWord},'%')
            </if>
        </where>

        ) a
        left join (
        SELECT article_id id
        FROM ap_collection
        WHERE user_id = #{userId}
        ) ac
        ON a.id = ac.id
        limit #{offset},#{dto.size}
    </select>

    <select id="count" resultType="java.lang.Integer">
        select count(a.id)
        from (
        select id,title
        from ap_article
        <where>
            <if test="dto.tag != null and dto.tag != ''">
                channel_id = #{dto.tag}
            </if>
        </where>
        ) a
        <if test="dto.keyWord != null and dto.keyWord != ''">
            inner join ap_article_content ac on a.id = ac.article_id
        </if>

        <where>
            <if test="dto.keyWord != null and dto.keyWord != ''">
                match(ac.content) against(#{dto.keyWord} in boolean mode)
                or a.title like concat('%',#{dto.keyWord},'%')
            </if>
        </where>
    </select>
    <select id="selectCollectionList" resultType="com.swust.model.article.vos.ApArticleVO">
        select
        ac.collection_time,
        <include refid="baseColumn"/>
        from ap_article a
        INNER JOIN ( SELECT article_id, collection_time FROM `ap_collection` WHERE user_id = #{userId} ) ac ON a.id = ac.article_id
    </select>

    <select id="selectArticleStatsByChannel" resultType="com.swust.model.common.pojos.StatisticModel">
        SELECT
            channel_name NAME,
            COUNT( channel_id )
            VALUE

        FROM
            ap_article
        GROUP BY
            channel_name
    </select>

    <select id="selectArticleTop10Views" resultType="com.swust.model.common.pojos.StatisticModel">
        SELECT title name, views value
        FROM `ap_article`
        WHERE views > 0
        ORDER BY views DESC
            LIMIT 10
    </select>

</mapper>
